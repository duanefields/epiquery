## Configuration 

Config, JSON object accessible via environment variable EPIQUERY_CONFIG as either the object itself (JSON) or
a file containing JSON.

### Connection Config
  Named connections are mapped to inbound requests, determining what connection will be used to
process the rendered query template.  Connection names are indicated by providing the name of the
desired connection in the inbound request, see below for details.

### Sample Configuration
    {
      "connections":[
        {"name":"sql__old","driver":"mssql","config": {"user":"", "password":"", "host":"", "port":""}},
        {"name":"sql_conn","driver":"mssql","config": {"user":"", "password":"", "host":"", "port":""}},
        {"name":"sql_con2","driver":"mssql","config": {"user":"", "password":"", "host":"", "port":""}},
        {"name":"mysql","driver":"mysql","config": {"user":"", "password":"", "host":"", "port":""}}
      ],
      "templateDir":"",
      "httpPort":8080
    }
 
### Interface

  The systems to which epiquery provides access are generally streaming data sources, and as such
the only supported interface is websockets.  As a convenience there is a veneer that maps the
underlying socket protocol into a REST like interface.  The REST interface is backwards compatible
with an older epiquery interface offering less functionality and being quite a bit less sophisticated
than the socket interface.

  New uses of the system should be based on the socket interface and have nothing to do with the REST
interface.  The REST interface is solely for backwards compatability and is lacking in several areas
including missing a streaming response, which makes it a poor choice for large data sets as the whole
response will be buffered before responding. 

#### Messages

##### Query
  Executes a query using the data provided.
  {"message":"query", "template":"/path/to/template.mustache", "query_id":"", "data":{}}

##### Row
  A message containing a single row of data from the execution of a query, associated with a containing result set.
  {"message":"row", "query_id":"", "columns":{"col_name": "col_value"}}

##### Query Begin
  Indicates that a particular query request has begun processing.
  {"message":"query_begin"}

##### Query Complete
  Indicates that a particular query has completed, all of it's data having been returned.
  {"message":"query_complete"}

