## Configuration 

Config, JSON object accessible via environment variable EPIQUERY_CONFIG as either the object itself (JSON) or
a file containing JSON.

### Connection Config
  In order to support backwards compatability with previous versions of the epiquery API, it is possible to
provide a connection selector function.  If the named connection specifies a selector function, it will be invoked
to determine which connection will be used to handle the request.  The presence of a connection selector function
superceeds the use of named connection lookup when choosing the connection used to handle the request.
The logic for determining which connection will be used for a request looks (logically) as follows:

    for each connection
      if connection.selector?(req)
        return connection
    for each connection
      if connection.isRequestedByName(req)
        return connection
    return null

  The connection selector will be passed the node IncomingMessage object associated with the inbound 
request. The selector should return true if the associated connection should be used to handle the
inbound request.

    function selector(req) {
      // determines if we should use the mysql connection to service the provided
      // request
      if (req.path.indexOf('mysql') != -1){
        return true;
      }
      return false; 
    }

### Sample Configuration
    {
      "connections":[
        {"name":"sql_conn_old",   "config": {"user":"", "password":"", "host":"", "port":"", "driver":"mssql" }, "selector":"selector function source code"},
        {"name":"sql_conn",   "config": {"user":"", "password":"", "host":"", "port":"", "driver":"mssql" }},
        {"name":"sql_conn_2", "config": {"user":"", "password":"", "host":"", "port":"", "driver":"mssql" }},
        {"name":"mysql_conn", "config": {"user":"", "password":"", "host":"", "port":"", "driver":"mysql"}}
      ],
      "templateDir":"",
      "httpPort":8080
    }
 
Request URL Format
http://<server>/<template path>/<connection_name>`

Sample Requests:

curl http://localhost:8080/test/servername/sql_conn_2

